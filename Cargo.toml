[package]
name = "esm-tsx"
version = "0.0.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
base64 = "0.22.1"
import_map = "0.20.1"
path-slash = "0.2.1"
pathdiff = "0.2.2"
serde = { version = "1.0.210", features = ["derive"] }
serde_json = "1.0.128"
url = "2.5.2"

# swc
# docs: https://swc.rs
# crate: https://crates.io/search?q=swc_ecmascript
swc_atoms = "2.0.0"
swc_core = { version = "1.0.0", features = [ "ecma_quote" ] }
swc_common = { version = "1.0.0", features = ["sourcemap"] }
swc_ecmascript = { version = "1.0.0", features = ["codegen", "parser", "utils", "visit", "quote"] }
swc_ecma_transforms = { version = "1.0.0", features = ["proposal", "typescript", "react", "optimization"] }

# wasm-bindgen
# docs: https://rustwasm.github.io/docs/wasm-bindgen
wasm-bindgen = { version = "0.2.95" }
serde-wasm-bindgen = "0.6.5"
getrandom = { version = "0.2.15", features = ["js"] }

[profile.release]
# link time optimization using using whole-program analysis
lto = true
# optimization for size (more aggressive)
opt-level = 'z'
# less code to include into binary
panic = 'abort'
# optimization over all codebase (better optimization, slower build)
codegen-units = 1
